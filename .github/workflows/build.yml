name: Build and Test

on:
  pull_request:
    branches:
      - active-development
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Get the built JAR file Path
      id: get_jar_path
      run: echo "JAR_PATH=$(ls build/libs/lukas_nutrients*.jar)" >> $GITHUB_ENV

    - name: Get the built JAR file name
      id: get_jar_name
      run: echo "JAR_NAME=$(basename $(ls build/libs/lukas_nutrients*.jar))" >> $GITHUB_ENV

    - name: extract version number
      id: get_mod_version
      run: echo "VER_NUM=$(echo ${{ env.JAR_NAME }} | sed 's/.*-\(.*\)\.jar/\1/')" >> $GITHUB_ENV
    
    - name: extract name for asset
      id: get_asset_name
      run: echo "ASSET_NAME=$(echo ${{ env.JAR_NAME }} | sed 's/\.jar$//'" >> $GITHUB_ENV


    - name: Get next version
      uses: reecetech/version-increment@2024.4.3
      id: version
      with:
        scheme: conventional_commits
        increment: patch
        release_branch: master

    - name: print version
      run: echo ${{ steps.version.outputs.v-version }}


    - name: Archive build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: ${{ env.JAR_PATH }}



    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: build/libs

    - name: Debug List files 
      run: echo "current" & ls -alh ./
            echo "build/libs" & ls build/libs


    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.v-version }}
        release_name: "Dev build: ${{ env.ASSET_NAME }}${{ steps.version.outputs.pre-release-label}}"
        draft: false
        prerelease: true

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.JAR_PATH }}
        asset_name: ${{ env.ASSET_NAME }}${{ steps.version.outputs.pre-release-label}}.jar
        asset_content_type: application/java-archive
  